From 01e1e742376e04a8b0436c6543725c4d8f1b0974 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Mon, 18 Mar 2024 10:18:07 +0100
Subject: [PATCH 27/43] winegstreamer: Use pthread_cond_broadcast instead of
 pthread_cond_signal for stream_event_cond.

---
 dlls/winegstreamer/wg_parser.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index c8409616aad..3e047e02de5 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -290,7 +290,7 @@ static NTSTATUS wg_parser_stream_disable(void *args)
     stream->enabled = false;
     stream->current_format.major_type = WG_MAJOR_TYPE_UNKNOWN;
     pthread_mutex_unlock(&parser->mutex);
-    pthread_cond_signal(&parser->stream_event_cond);
+    pthread_cond_broadcast(&parser->stream_event_cond);
     return S_OK;
 }
 
@@ -316,7 +316,7 @@ static void release_buffer(struct wg_parser *parser, struct wg_parser_stream *st
         stream->buffer = NULL;
     }
 
-    pthread_cond_signal(&parser->stream_event_cond);
+    pthread_cond_broadcast(&parser->stream_event_cond);
 }
 
 static NTSTATUS wg_parser_stream_get_buffer(void *args)
@@ -722,7 +722,7 @@ static gboolean sink_event_cb(GstPad *pad, GstObject *parent, GstEvent *event)
             pthread_mutex_lock(&parser->mutex);
             stream->eos = true;
             if (stream->enabled)
-                pthread_cond_signal(&parser->stream_event_cond);
+                pthread_cond_broadcast(&parser->stream_event_cond);
             else
                 pthread_cond_signal(&parser->init_cond);
             pthread_mutex_unlock(&parser->mutex);
@@ -734,7 +734,7 @@ static gboolean sink_event_cb(GstPad *pad, GstObject *parent, GstEvent *event)
             if (stream->enabled)
             {
                 stream->flushing = true;
-                pthread_cond_signal(&parser->stream_event_cond);
+                pthread_cond_broadcast(&parser->stream_event_cond);
 
                 if (stream->buffer)
                 {
@@ -841,7 +841,7 @@ static GstFlowReturn sink_chain_cb(GstPad *pad, GstObject *parent, GstBuffer *bu
     stream->buffer = buffer;
 
     pthread_mutex_unlock(&parser->mutex);
-    pthread_cond_signal(&parser->stream_event_cond);
+    pthread_cond_broadcast(&parser->stream_event_cond);
 
     /* The chain callback is given a reference to the buffer. Transfer that
      * reference to the stream object, which will release it in
@@ -2076,7 +2076,7 @@ static NTSTATUS wg_parser_disconnect(void *args)
     pthread_mutex_lock(&parser->mutex);
     for (i = 0; i < parser->stream_count; ++i)
         parser->streams[i]->flushing = true;
-    pthread_cond_signal(&parser->stream_event_cond);
+    pthread_cond_broadcast(&parser->stream_event_cond);
     pthread_mutex_unlock(&parser->mutex);
 
     gst_element_set_state(parser->container, GST_STATE_NULL);
-- 
2.45.2

