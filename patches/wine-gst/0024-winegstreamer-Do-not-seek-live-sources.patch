From 9e5e81aad59a6ae8335127396961e1121cd40592 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Sun, 14 Apr 2024 06:12:55 +0200
Subject: [PATCH 24/46] winegstreamer: Do not seek live sources.

souphttpsrc seems to break from seeking sometimes:

    winegstreamer error: source: Server does not support seeking.
    winegstreamer error: source: ../src-gst_good/ext/soup/gstsouphttpsrc.c(1948): gst_soup_http_src_do_request (): /GstBin:bin1/GstURIDecodeBin:uridecodebin1/GstSoupHTTPSrc:source:
    Server does not accept Range HTTP header, URL: https://stream.vrcdn.live/live/djzombiepunk.live.ts, Redirect to: (NULL)

Seeking a live source doesn't make sense anyway.
---
 dlls/winegstreamer/wg_parser.c | 29 +++++++++++++++++++++++------
 1 file changed, 23 insertions(+), 6 deletions(-)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 11b4d4f915a..20dae3e8cdd 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -110,6 +110,8 @@ struct wg_parser
     bool use_mediaconv;
     bool use_opengl;
     GstContext *context;
+
+    bool is_live;
 };
 static const unsigned int input_cache_chunk_size = 512 << 10;
 
@@ -605,6 +607,9 @@ static NTSTATUS wg_parser_stream_seek(void *args)
 
     stream = get_stream(params->stream);
 
+    if (stream->parser->is_live)
+        return S_OK;
+
     if (start_flags & AM_SEEKING_SeekToKeyFrame)
         flags |= GST_SEEK_FLAG_KEY_UNIT;
     if (start_flags & AM_SEEKING_Segment)
@@ -2065,9 +2070,9 @@ static NTSTATUS wg_parser_connect(void *args)
         goto out;
 
     gst_element_set_base_time(parser->container, gst_clock_get_time(clock));
-    gst_element_set_state(parser->container, GST_STATE_PAUSED);
-    ret = gst_element_get_state(parser->container, NULL, NULL, -1);
-
+    ret = gst_element_set_state(parser->container, GST_STATE_PAUSED);
+    if (ret == GST_STATE_CHANGE_ASYNC)
+        ret = gst_element_get_state(parser->container, NULL, NULL, -1);
     if (ret == GST_STATE_CHANGE_FAILURE)
     {
         if (!parser->use_mediaconv && parser->init_gst == decodebin_parser_init_gst)
@@ -2079,13 +2084,19 @@ static NTSTATUS wg_parser_connect(void *args)
             GST_ERROR("Failed to play stream.");
         goto out;
     }
+    else if (ret == GST_STATE_CHANGE_NO_PREROLL && parser->uri)
+    {
+        GST_DEBUG("Stream is live.");
+        parser->is_live = TRUE;
+    }
 
     pthread_mutex_lock(&parser->mutex);
 
     if (parser->uri)
     {
-        gst_element_set_state(parser->container, GST_STATE_PLAYING);
-        ret = gst_element_get_state(parser->container, NULL, NULL, -1);
+        ret = gst_element_set_state(parser->container, GST_STATE_PLAYING);
+        if (ret == GST_STATE_CHANGE_ASYNC)
+            ret = gst_element_get_state(parser->container, NULL, NULL, -1);
         if (ret == GST_STATE_CHANGE_FAILURE)
             goto out;
     }
@@ -2141,7 +2152,13 @@ static NTSTATUS wg_parser_connect(void *args)
             }
             if (gst_pad_peer_query_duration(stream->my_sink, GST_FORMAT_TIME, &duration))
             {
-                stream->duration = duration == -1 ? (uint64_t)-1 : duration / 100;
+                if (duration == -1)
+                {
+                    parser->is_live = TRUE;
+                    stream->duration = (uint64_t)-1;
+                }
+                else
+                    stream->duration = duration / 100;
                 break;
             }
 
-- 
2.46.0

