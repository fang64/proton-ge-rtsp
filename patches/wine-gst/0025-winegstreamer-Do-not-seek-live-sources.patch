From 770cb2d26ef8b749dd093028b5167628df8f25ab Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Sun, 14 Apr 2024 06:12:55 +0200
Subject: [PATCH 25/43] winegstreamer: Do not seek live sources.

souphttpsrc seems to break from seeking sometimes:

    winegstreamer error: source: Server does not support seeking.
    winegstreamer error: source: ../src-gst_good/ext/soup/gstsouphttpsrc.c(1948): gst_soup_http_src_do_request (): /GstBin:bin1/GstURIDecodeBin:uridecodebin1/GstSoupHTTPSrc:source:
    Server does not accept Range HTTP header, URL: https://stream.vrcdn.live/live/djzombiepunk.live.ts, Redirect to: (NULL)

Seeking a live source doesn't make sense anyway.
---
 dlls/winegstreamer/wg_parser.c | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 225e66db202..912ecd4acfc 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -110,6 +110,8 @@ struct wg_parser
     bool use_mediaconv;
     bool use_opengl;
     GstContext *context;
+
+    bool is_live;
 };
 static const unsigned int input_cache_chunk_size = 512 << 10;
 
@@ -605,6 +607,9 @@ static NTSTATUS wg_parser_stream_seek(void *args)
 
     stream = get_stream(params->stream);
 
+    if (stream->parser->is_live)
+        return S_OK;
+
     if (start_flags & AM_SEEKING_SeekToKeyFrame)
         flags |= GST_SEEK_FLAG_KEY_UNIT;
     if (start_flags & AM_SEEKING_Segment)
@@ -834,6 +839,7 @@ static void no_more_pads_cb(GstElement *element, gpointer user)
 
 static void deep_element_added_cb(GstBin *self, GstBin *sub_bin, GstElement *element, gpointer user)
 {
+    struct wg_parser *parser = user;
     GstElementFactory *factory = NULL;
     const char *name = NULL;
 
@@ -856,6 +862,9 @@ static void deep_element_added_cb(GstBin *self, GstBin *sub_bin, GstElement *ele
         g_object_set(element, "n-threads", G_GINT64_CONSTANT(1), NULL);
 #endif
     }
+
+    if (name && (strstr(name, "HLS") || strstr(name, "RTP") || strstr(name, "RTSP")))
+        parser->is_live = TRUE;
 }
 
 static gboolean sink_event_cb(GstPad *pad, GstObject *parent, GstEvent *event)
@@ -2112,7 +2121,11 @@ static NTSTATUS wg_parser_connect(void *args)
         goto out;
 
     gst_element_set_base_time(parser->container, gst_clock_get_time(clock));
-    gst_element_set_state(parser->container, GST_STATE_PAUSED);
+    if (gst_element_set_state(parser->container, GST_STATE_PAUSED) == GST_STATE_CHANGE_NO_PREROLL && parser->uri)
+    {
+        GST_DEBUG("Stream is live.");
+        parser->is_live = TRUE;
+    }
     ret = gst_element_get_state(parser->container, NULL, NULL, -1);
 
     if (ret == GST_STATE_CHANGE_FAILURE)
@@ -2131,7 +2144,11 @@ static NTSTATUS wg_parser_connect(void *args)
 
     if (parser->uri)
     {
-        gst_element_set_state(parser->container, GST_STATE_PLAYING);
+        if (gst_element_set_state(parser->container, GST_STATE_PLAYING) == GST_STATE_CHANGE_NO_PREROLL && !parser->is_live)
+        {
+            GST_DEBUG("Stream is live.");
+            parser->is_live = TRUE;
+        }
         ret = gst_element_get_state(parser->container, NULL, NULL, -1);
         if (ret == GST_STATE_CHANGE_FAILURE)
             goto out;
-- 
2.45.2

