From 7696a4041c007e7a978535b4bfe5c9cb4f349ed9 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Tue, 20 Feb 2024 23:17:28 +0100
Subject: [PATCH 13/42] winegstreamer: Make wg_parser report the exact
 supported formats to gstreamer instead of just ANY.

---
 dlls/winegstreamer/wg_parser.c | 59 +++++++++++++++++++++++++++++++---
 1 file changed, 54 insertions(+), 5 deletions(-)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index c0eabd5024f..d28cd189b6b 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -944,6 +944,54 @@ static GstFlowReturn sink_chain_cb(GstPad *pad, GstObject *parent, GstBuffer *bu
     return GST_FLOW_OK;
 }
 
+static GstCaps *get_supported_formats(void)
+{
+    GstCaps *caps = gst_caps_new_empty(), *temp;
+    GstAudioInfo ainfo;
+    GstVideoInfo vinfo;
+    gsize i;
+
+    if (!caps)
+        return NULL;
+
+    /* video/x-raw */
+    gst_video_info_set_format(&vinfo, GST_VIDEO_FORMAT_BGRA, 1, 1);
+    if (!(temp = gst_video_info_to_caps(&vinfo)))
+    {
+        gst_caps_unref(caps);
+        return NULL;
+    }
+    for (i = 0; i < gst_caps_get_size(temp); ++i)
+        gst_structure_remove_fields(gst_caps_get_structure(temp, i),
+                "format", "width", "height", "framerate", "colorimetry", NULL);
+    gst_caps_append(caps, temp);
+    /* other formats */
+    gst_caps_append(caps, gst_caps_new_empty_simple("video/x-cinepak"));
+    gst_caps_append(caps, gst_caps_new_simple("video/x-h264", "stream-format", G_TYPE_STRING, "byte-stream",
+            "alignment", G_TYPE_STRING, "au", NULL));
+    gst_caps_append(caps, gst_caps_new_empty_simple("video/x-wmv"));
+    gst_caps_append(caps, gst_caps_new_empty_simple("video/x-indeo"));
+
+    /* audio/x-raw */
+    gst_audio_info_set_format(&ainfo, GST_AUDIO_FORMAT_S16LE, 1, 1, NULL);
+    if (!(temp = gst_audio_info_to_caps(&ainfo)))
+    {
+        gst_caps_unref(caps);
+        return NULL;
+    }
+    for (i = 0; i < gst_caps_get_size(temp); ++i)
+        gst_structure_remove_fields(gst_caps_get_structure(temp, i),
+                "format", "channels", "rate", "channel-mask", NULL);
+    gst_caps_append(caps, temp);
+    /* other formats */
+    gst_caps_append(caps, gst_caps_new_simple("audio/mpeg", "mpegversion", G_TYPE_INT, 1,
+            "parsed", G_TYPE_BOOLEAN, TRUE, NULL));
+    gst_caps_append(caps, gst_caps_new_simple("audio/mpeg", "mpegversion", G_TYPE_INT, 4, NULL));
+    gst_caps_append(caps, gst_caps_new_empty_simple("audio/x-xma"));
+
+    return caps;
+}
+
 static gboolean sink_query_cb(GstPad *pad, GstObject *parent, GstQuery *query)
 {
     struct wg_parser_stream *stream = gst_pad_get_element_private(pad);
@@ -961,12 +1009,13 @@ static gboolean sink_query_cb(GstPad *pad, GstObject *parent, GstQuery *query)
             gst_query_parse_caps(query, &filter);
 
             pthread_mutex_lock(&parser->mutex);
-            if (!stream->desired_caps || !(caps = gst_caps_copy(stream->desired_caps)))
-            {
-                pthread_mutex_unlock(&parser->mutex);
-                return FALSE;
-            }
+            if (stream->desired_caps)
+                caps = gst_caps_copy(stream->desired_caps);
+            else
+                caps = get_supported_formats();
             pthread_mutex_unlock(&parser->mutex);
+            if (!caps)
+                return FALSE;
 
             /* Clear some fields that shouldn't prevent us from connecting. */
             for (i = 0; i < gst_caps_get_size(caps); ++i)
-- 
2.45.2

